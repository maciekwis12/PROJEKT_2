# -*- coding: utf-8 -*-
"""
/***************************************************************************
 RoznicaWysokosciOrazPolePowierzchniDialog
                                 A QGIS plugin
 To jest wtyczka obliczająca różnicę wysokości między dwoma punktami oraz pole powierzchni między trzema punktami
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-06-10
        git sha              : $Format:%H$
        copyright            : (C) 2023 by Aleksandra Krogulska, Maciej Wiśniewski
        email                : maciek.wis12@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.utils import iface

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'roznica_wysokosci_oraz_pole_powierzchni_dialog_base.ui'))


class RoznicaWysokosciOrazPolePowierzchniDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(RoznicaWysokosciOrazPolePowierzchniDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        self.pushButton_oblicz_roznice_wysokosci.clicked.connect(self.oblicz_roznice_wys)
        self.pushButton_oblicz_pole_powierzchni.clicked.connect(self.oblicz_pole_powierzchni_gauss)
        
    def oblicz_roznice_wys(self):
        canvas = iface.mapCanvas()
        warstwa = canvas.currentLayer()
        atrybuty = warstwa.selectedFeatures()
        
        if len(atrybuty) == 2:
            atrybut_h = "Wysokosc"
            wysokosci_punktow = []
            for atrybut in atrybuty:
                wys = atrybut[atrybut_h]
                wysokosci_punktow.append(wys)
    
            # Obliczanie różnicy wysokości między dwoma punktami
            delta_h = wysokosci_punktow[0] - wysokosci_punktow[1]
            self.textEdit_pokaz_roznice_wysokosci.setText(f"Różnica wysokości: {delta_h} [m]")
        else:
            self.textEdit_pokaz_roznice_wysokosci.setText("Zaznacz dokładnie dwa punkty.")
    
    def oblicz_pole_powierzchni_gauss(self):
        canvas = iface.mapCanvas()
        warstwa = canvas.currentLayer()
        atrybuty = warstwa.selectedFeatures()
        
        if len(atrybuty) == 3:
            atrybut_x = "Wspolrzedna X"
            x_punktow = []
            for atrybut in atrybuty:
                x = atrybut[atrybut_x]
                x_punktow.append(x)
                
            atrybut_y = "Wspolrzedna Y"
            y_punktow = [] 
            for atrybut in atrybuty:
                 y = atrybut[atrybut_y]
                 y_punktow.append(y)
            
            
            x_punktow.append(x_punktow[0])
            y_punktow.append(y_punktow[0])
        
            # Obliczamy sumę iloczynów współrzędnych punktów
            sum1 = sum(x_punktow[i] * y_punktow[i + 1] for i in range(len(x_punktow) - 1))
            sum2 = sum(x_punktow[i + 1] * y_punktow[i] for i in range(len(x_punktow) - 1))
            
            pole = 0.5 * abs(sum1 - sum2)
            self.textEdit_pokaz_pole_powierzchni.setText(f"Pole powierzchni: {pole} [m^2]")
        else:
            self.textEdit_pokaz_pole_powierzchni.setText("Zaznacz dokładnie trzy punkty.")
